version: '2.1'

services:
  db:
    image: postgres:11-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: gnuhealth
      POSTGRES_PASSWORD: gnuhealth
    volumes:
      - ./data/db:/var/lib/postgresql/data

  gnuhealth:
    build:
      context: ./gnuhealth
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      TRYTOND_DATABASE_NAMES: gnuhealth
      PYTHONOPTIMIZE: 1
      CONTAINER_ROLE: server
    depends_on:
      - db
    volumes:
      - ./data/attach:/var/lib/trytond/db

  # gnuhealth-worker:
  #   build:
  #     context: ./gnuhealth
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB_NAME: gnuhealth
  #     CONTAINER_ROLE: worker
  #   depends_on:
  #     - db
  #     - gnuhealth

  # gnuhealth-cron:
  #   build:
  #     context: ./gnuhealth
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB_NAME: gnuhealth
  #     CONTAINER_ROLE: cron
  #   depends_on:
  #     - db
  #     - gnuhealth

  nginx:
    restart: unless-stopped
    image: nginx:1-alpine
    ports:
      - 8000:8000
    restart: unless-stopped
    depends_on:
      - gnuhealth
      - db
    volumes:
      - ./config:/etc/nginx/conf.d
      # http://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
